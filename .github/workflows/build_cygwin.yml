name: Build (Cygwin)
on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build_cygwin:
    runs-on: windows-latest
    defaults:
      run:
        shell: C:\tools\cygwin\bin\bash.exe --login -o igncr '{0}'

    steps:
      - name: Set up Cygwin and install requirements
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: x64
          packages: make gcc-core pkgconf libssl-devel cmake python3

      - name: Clone main repository
        uses: actions/checkout@v3
        with:
          submodules: true
          path: osh-vpn

      - name: Clone mpreisler/mingw-bundledlls repository
        uses: actions/checkout@v3
        with:
          repository: mpreisler/mingw-bundledlls
          path: mingw-bundledlls

      - name: Build project
        run: |
          cd "$GITHUB_WORKSPACE/osh-vpn"
          cmake -B build -G "Unix Makefiles" -DCMAKE_C_FLAGS="-Werror" -DCMAKE_BUILD_TYPE=Hardened .
          make -C build

      - name: Copy the required DLLs
        run: |
          cd "$GITHUB_WORKSPACE/osh-vpn/build"
          python3 ../../mingw-bundledlls/mingw-bundledlls --copy oshd.exe

      - name: Upload binaries and DLLs artifact
        uses: actions/upload-artifact@v2
        with:
          name: osh-vpn-cygwin
          path: |
            ${{ github.workspace }}/osh-vpn/build/*.exe
            ${{ github.workspace }}/osh-vpn/build/*.dll