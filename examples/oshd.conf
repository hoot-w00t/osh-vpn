# Sample Osh configuration file
# Parameters with a default value are optional

# Uncomment to disable the TCP server
#NoServer

# This node's name
# It serves as a unique ID on the network
# A node's name can only contain alphanumeric characters (upper and lower case)
# Dashes and underscores are also valid characters
# The name cannot be longer than 16 characters, if it is only the first 16
# characters will be kept
# Required
Name	node0

# This network's name
# It serves as a shared ID on the network
# This value has the same limitations as Name (see above)
#
# The NetworkName is only used with the dynamic mode and ignored otherwise
#NetworkName	my_mesh

# This node's private key, only one private key can be used
# Depending on how your private key is stored you can either use PrivateKey or
# PrivateKeyFile to load it
# Required
#PrivateKey	<Base64 encoded private key>
#PrivateKeyFile	oshd.key

# Set nodes' public keys using a dedicated file, see example/pubkeys.conf
#PublicKeysFile	pubkeys.conf

# Nodes' public keys are exchanged between daemons on the network
# When set to local, only the public keys loaded locally (using PublicKey or
# PublicKeysFile) can be used to authenticate nodes
# When set to remote all keys including the ones received from the network can
# be used for authentication, this allows your node to make direct connections
# with any node on the network without having to exchange your public keys
# The keys received from the network are not saved and will not replace the
# ones loaded locally
# Default is local
#KeysTrust	local
#KeysTrust	remote

# Uncomment to share all endpoints configured here with all nodes on the network
# This allows other nodes to try to establish direct connections to the same
# endpoints as this node
#ShareEndpoints

# When enabled, Osh will automatically try to establish direct connections to
# other nodes on the network
# When ConnectionsLimit is set, it will always leave enough slots for the
# endpoints you configured here
# After an automatic connection is established Osh will only try to reconnect
# to it once and give up on failure
# Note: On a larger scale automatic connections can establish a lot of
#       connections, consider limiting those using the ConnectionsLimit
#       parameter if this can be a problem
#AutomaticConnections

# Interval at which automatic connections will be tried (in seconds)
# Default is 3600 seconds (1 hour)
#AutomaticConnectionsInterval	3600

# Percentage of nodes to which we will try to keep a direct connection
# i.e. If there are 20 nodes on the tree and the percentage is set to 50%,
#      Osh will try to automatically connect to more nodes when there is less
#      than 10 direct connections
# Default is 50%
#AutomaticConnectionsPercent	50

# Local port for the server to listen on
# Default is 9270
Port	9270

# TUN/TAP interface mode
# The mode is case-insensitive
# The nodevice mode will disable the TUN/TAP device
# The dynamic mode automatically configures a TUN device
#	It will automatically assign unique IPv4 and IPv6 addresses and setup
#	the TUN device
#	This requires NetworkName to be set, each node must have the same
#
# Default is tun
#Mode	nodevice
#Mode	tap
Mode	tun
#Mode	dynamic

# Dynamic device mode address generation
# This parameter controls how dynamic addresses are generated when Osh starts
# (when Mode is set to dynamic)
#
#   Stable: Generates a pseudo-random address using NetworkName and Name, it
#		will stay the same across restarts (unless NetworkName or Name
#		is changed)
#
#   Random: Generates a completely random address, it will never be the same
#		across restarts
#
# Note: Osh will automatically solve address conflicts in all cases
#	When two nodes try to use the same address, one will keep it and the
#	other will generate a new random address
#
# Default is stable
#DynamicAddr	stable
#DynamicAddr	random

# TUN/TAP device name
# Omitting this parameter will let the system decide the device's name
Device	osh

# DevUp and DevDown are commands that will be executed by the daemon (as root)
# respectively after the TUN/TAP device is opened and right before it is closed
# The commands are executed with the root user's default shell
# Osh sets the OSHD_DEVICE environment variable to the name of the TUN/TAP
# so that you can use it in scripts to configure the device
# If the DevUp command fails (return code != 0) the daemon will stop
# Both parameters are optional
DevUp	ip link set "$OSHD_DEVICE" up && ip addr add "10.0.0.1/24" dev "$OSHD_DEVICE"
DevDown	ip link set "$OSHD_DEVICE" down

# Delay (in seconds) before re-trying to connect to an endpoint which got
# disconnected
# After each failed connection attempt the delay will be doubled and capped to
# ReconnectDelayMax
# After a successful connection it is reset to ReconnectDelayMin
# Default minimum: 10
# Default maximum: 60
#ReconnectDelayMin	10
#ReconnectDelayMax	60

# Maximum amount of simultaneous direct connections
# If this value is zero there is no limit, otherwise Osh will limit the number
# direct connections
# Default is 0 (unlimited)
#ConnectionsLimit	0

# Path to a file where the digraph will be dumped to
# By default the digraph will be dumped to the standard output
# The digraph will be dumped every time the daemon receives a SIGUSR1
#DigraphFile	digraph.txt

# Set the logging level
# This can be Critical, Error, Warning, Info
# Default is Info
#LogLevel	Info

# Load another configuration file
#Include	filename.conf

# Manually add a local route owned by this node
#Route	10.0.0.0/24
#Route	fdab:cdef:1234:5678::/64

# Node configuration
# This "selects" a node to configure, compatible parameters defined after this
# line will be applied for that node (such as PublicKey or Endpoint)
#Node <node name>

# Set the selected node's public key
#PublicKey	<Base64 encoded public key>

# Add one or more endpoints to the selected node
# Osh will try to connect to the node using these endpoints, in the order they
# are defined
# The port is optional, it defaults to 9270. It should be separated with spaces
# and/or tabulations
#Endpoint	127.0.0.1
#Endpoint	127.0.0.1	9270
#Endpoint	example.com
#Endpoint	example.com	9270

# Always keep trying to connect to the selected node
#AlwaysConnect

# Node configuration examples
#Node node1
#	PublicKey	<Base64 encoded public key>
#	Endpoint	192.168.0.1
#	Endpoint	192.168.0.2
#	AlwaysConnect
#
#Node node2
#	PublicKey	<Base64 encoded public key>
#	Endpoint	10.0.0.1
